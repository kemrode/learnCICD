name: buildlearncicd
run-name: ${{ github.actor }} is learning GitHub Actions
on: ['push']
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository}}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - uses: actions/cache@v3
          with:
            path: |
             learncicdapp/node_modules
             /home/runner/.cache/Cypress
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        - run: |
            cd learncicdapp
            npm install
            npm run build
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - uses: actions/checkout@v3
        - uses: actions/cache@v3
          with:
            path: |
              learncicdapp/node_modules
              /home/runner/.cache/Cypress
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        - run: |
            cd learncicdapp
            npm run e2e:headless
        - uses: actions/upload-artifact@v3
          if: always()
          with:
            name: cypress-video-report
            path: learncicdapp/cypress/videos/
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.7.0
        with:
            ssh-private-key: ${{ secrets.SSH_KEY }}
      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER}}@${{ secrets.SSH_HOST}} "\
          cd learnCICD && \
          cd learncicdapp && \
          git pull && \
          npm install && \
          npm run build && \
          pm2 restart all"
  package:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}